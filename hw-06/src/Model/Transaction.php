<?php declare(strict_types=1);

namespace App\Model;

use App\Db;

class Transaction
{
    protected int $id;

    public function __construct(
        protected Account $from,
        protected Account $to,
        protected float   $amount
    )
    {
    }

    /**
     * Creates DB table using CREATE TABLE ...
     */
    public static function createTable(): void
    {
        $db = Db::get();
        $db->query('CREATE TABLE IF NOT EXISTS `transaction` (
            id INTEGER PRIMARY KEY,
            account_from INTEGER NOT NULL,
            account_to INTEGER NOT NULL,
            amount REAL NOT NULL,
            FOREIGN KEY (account_from) REFERENCES account (id),
            FOREIGN KEY (account_to) REFERENCES account (id)
        )');
    }

    /**
     * Drops DB table using DROP TABLE ...
     */
    public static function dropTable(): void
    {
        $db = Db::get();
        $db->query('DROP TABLE IF EXISTS `transaction`');
    }

    /**
     * Insert this instance into DB table `transaction`
     *
     * @return int inserted item autogenerated ID
     */
    public function insert(): int
    {
        $db = Db::get();
        $query = 'INSERT INTO `transaction` (account_from, account_to, amount) VALUES (:acc_from, :acc_to, :amount)';
        $state = $db->prepare($query);

        $state->execute([
            "acc_from" => $this->getFrom()->getId(),
            "acc_to" => $this->getTo()->getId(),
            "amount" => $this->getAmount(),
        ]);

        return intval($db->lastInsertId("transaction"));
    }

    public function getId(): int
    {
        return $this->id;
    }

    public function setId(int $id): Transaction
    {
        $this->id = $id;
        return $this;
    }

    public function getFrom(): Account
    {
        return $this->from;
    }

    public function setFrom(Account $from): Transaction
    {
        $this->from = $from;
        return $this;
    }

    public function getTo(): Account
    {
        return $this->to;
    }

    public function setTo(Account $to): Transaction
    {
        $this->to = $to;
        return $this;
    }

    public function getAmount(): float
    {
        return $this->amount;
    }

    public function setAmount(float $amount): Transaction
    {
        $this->amount = $amount;
        return $this;
    }
}
